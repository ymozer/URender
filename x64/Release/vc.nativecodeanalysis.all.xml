<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\Study\URender\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>137</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>line2</FUNCTION>
    <DECORATED>?line2@@YAXHHHHAEAVTGAImage@@UTGAColor@@@Z</DECORATED>
    <FUNCLINE>132</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\Study\URender\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>159</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>line3</FUNCTION>
    <DECORATED>?line3@@YAXHHHHAEAVTGAImage@@UTGAColor@@@Z</DECORATED>
    <FUNCLINE>142</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\Study\URender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>176</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::write_tga_file</FUNCTION>
    <DECORATED>?write_tga_file@TGAImage@@QEAA_NPEBD_N@Z</DECORATED>
    <FUNCLINE>151</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\Study\URender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>176</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::write_tga_file</FUNCTION>
    <DECORATED>?write_tga_file@TGAImage@@QEAA_NPEBD_N@Z</DECORATED>
    <FUNCLINE>151</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\Study\URender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>259</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::get</FUNCTION>
    <DECORATED>?get@TGAImage@@QEAA?AUTGAColor@@HH@Z</DECORATED>
    <FUNCLINE>255</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\Study\URender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>259</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::get</FUNCTION>
    <DECORATED>?get@TGAImage@@QEAA?AUTGAColor@@HH@Z</DECORATED>
    <FUNCLINE>255</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\Study\URender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>266</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::set</FUNCTION>
    <DECORATED>?set@TGAImage@@QEAA_NHHUTGAColor@@@Z</DECORATED>
    <FUNCLINE>262</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\Study\URender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>266</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::set</FUNCTION>
    <DECORATED>?set@TGAImage@@QEAA_NHHUTGAColor@@@Z</DECORATED>
    <FUNCLINE>262</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\Study\URender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>317</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::clear</FUNCTION>
    <DECORATED>?clear@TGAImage@@QEAAXXZ</DECORATED>
    <FUNCLINE>316</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\Study\URender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>317</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::clear</FUNCTION>
    <DECORATED>?clear@TGAImage@@QEAAXXZ</DECORATED>
    <FUNCLINE>316</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\Study\URender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>322</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::scale</FUNCTION>
    <DECORATED>?scale@TGAImage@@QEAA_NHH@Z</DECORATED>
    <FUNCLINE>320</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Dev\Study\URender\</FILEPATH>
      <FILENAME>tgaimage.cpp</FILENAME>
      <LINE>322</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TGAImage::scale</FUNCTION>
    <DECORATED>?scale@TGAImage@@QEAA_NHH@Z</DECORATED>
    <FUNCLINE>320</FUNCLINE>
    <PATH></PATH>
  </DEFECT></DEFECTS>